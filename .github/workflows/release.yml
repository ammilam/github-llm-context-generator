name: Auto Release and Publish

# Automatically creates releases and publishes to npm on push to main
on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run tests
        run: npm test
      
      - name: Bump version and create tag
        id: version
        run: |
          # Determine version bump based on commit messages
          # Default to patch version
          VERSION_BUMP="patch"
          
          # Check if commit message contains [minor] or feat:
          if git log -1 --pretty=%B | grep -qE '\[minor\]|feat:'; then
            VERSION_BUMP="minor"
          fi
          
          # Check if commit message contains [major] or BREAKING CHANGE:
          if git log -1 --pretty=%B | grep -qE '\[major\]|BREAKING CHANGE:'; then
            VERSION_BUMP="major"
          fi
          
          # Skip if commit message contains [skip ci] or [skip release]
          if git log -1 --pretty=%B | grep -qE '\[skip ci\]|\[skip release\]'; then
            echo "Skip release detected in commit message"
            echo "new_version=skip" >> $GITHUB_OUTPUT
          else
            echo "Processing release..."
            
            # Configure git
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
            # Bump version
            npm version $VERSION_BUMP -m "chore: release %s [skip ci]"
            
            # Get the new version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "new_version=v$NEW_VERSION" >> $GITHUB_OUTPUT
            
            # Push changes and tag
            git push origin HEAD:main --follow-tags
          fi
      
      - name: Create GitHub Release
        if: steps.version.outputs.new_version != 'skip'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new_version }}
          release_name: Release ${{ steps.version.outputs.new_version }}
          body: |
            ## Changes in this Release
            
            See [commit history](https://github.com/${{ github.repository }}/commits/${{ steps.version.outputs.new_version }}) for details.
            
            ## Installation
            ```bash
            npm install github-llm-context-generator@latest
            ```
          draft: false
          prerelease: false
      
      - name: Publish to npm
        if: steps.version.outputs.new_version != 'skip'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}